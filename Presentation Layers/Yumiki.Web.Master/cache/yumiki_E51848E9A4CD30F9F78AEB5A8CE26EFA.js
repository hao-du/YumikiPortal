
(function(win,doc,$,yumiki){yumiki.moneyTrace={};}(window,document,jQuery,yumiki));

(function(win,doc,$,yumiki){yumiki.moneyTrace.bank={showActiveText:'Show Active Bank',showInactiveText:'Show Inactive Bank',errorLogType:'',initBank:function(defaultObject,getAllBankUrl,getBankByIdUrl,saveBankUrl,errorLogType){var app=angular.module('bank',['ui.bootstrap']);yumiki.moneyTrace.bank.initService(app,getAllBankUrl,getBankByIdUrl,saveBankUrl);yumiki.moneyTrace.bank.initBankListController(app);yumiki.moneyTrace.bank.initBankDialogController(app,defaultObject);},initService:function(app,getAllBankUrl,getBankByIdUrl,saveBankUrl){app.service('DataService',function($http){this.getBanks=function(showInactive,currentPage,itemsPerPage){return $http.get(getAllBankUrl,{params:{'showInactive':showInactive,'currentPage':currentPage,'itemsPerPage':itemsPerPage}});};this.getBankByID=function(bankID){return $http.get(getBankByIdUrl,{params:{'bankID':bankID}});};this.save=function(bank){return $http.post(saveBankUrl,bank);};});},initBankListController:function(app){app.controller('bankController',function($scope,$rootScope,$http,DataService){$scope.inactiveButtonName=yumiki.moneyTrace.bank.showInactiveText;$scope.isStatusChanged=false;$scope.viewby=20;$scope.itemsPerPage=$scope.viewby;$scope.totalItems=0;$scope.currentPage=1;$scope.maxSize=5;$scope.showDialog=function(bankID){$rootScope.$broadcast("OnLoad",bankID);}
$rootScope.$on('OnReloadData',function(event){$scope.loadData();});$scope.loadData=function(){var showInactive=true;if($scope.inactiveButtonName==yumiki.moneyTrace.bank.showInactiveText){showInactive=false;}
if($scope.isStatusChanged){showInactive=!showInactive;}
yumiki.message.displayLoadingDialog(true);DataService.getBanks(showInactive,$scope.currentPage,$scope.itemsPerPage).then(function mySucces(response){$scope.banks=response.data.Records;$scope.currentPage=response.data.CurrentPage;$scope.totalItems=response.data.TotalItems;$scope.itemsPerPage=response.data.ItemsPerPage;if($scope.isStatusChanged){if($scope.inactiveButtonName==yumiki.moneyTrace.bank.showInactiveText){$scope.inactiveButtonName=yumiki.moneyTrace.bank.showActiveText;}else{$scope.inactiveButtonName=yumiki.moneyTrace.bank.showInactiveText;}
$scope.isStatusChanged=false;}
yumiki.message.displayLoadingDialog(false);},function myError(response){$scope.isStatusChanged=false;yumiki.message.displayLoadingDialog(false);yumiki.message.clientMessage(response.data,'',yumiki.moneyTrace.bank.errorLogType);});};$scope.loadDataWithStatus=function(){$scope.isStatusChanged=true;$scope.loadData();}});},initBankDialogController:function(app,defaultObject){app.controller('bankDialogController',function($scope,$rootScope,$http,DataService){$scope.bankID=undefined;$scope.isActiveCheckboxDisabled=false;$rootScope.$on('OnLoad',function(event,bankID){$('#dlgBank').modal({backdrop:'static'});if(bankID!=undefined&&bankID!=null){$scope.bankID=bankID;$scope.isActiveCheckboxDisabled=false;$scope.dialogTitle="Edit Bank";yumiki.message.displayLoadingDialog(true);DataService.getBankByID($scope.bankID).then(function mySucces(response){$scope.bank=response.data;yumiki.message.displayLoadingDialog(false);},function myError(response){yumiki.message.displayLoadingDialog(false);yumiki.message.clientMessage(response.data,'',yumiki.moneyTrace.bank.errorLogType);});}else{$scope.dialogTitle="New Bank";$scope.isActiveCheckboxDisabled=true;$scope.bank=$scope.resetBank();}});$scope.resetBank=function(){$scope.bankForm.$setPristine();return defaultObject;}
$scope.save=function(isValid){if(isValid){yumiki.message.displayLoadingDialog(true);DataService.save($scope.bank).then(function mySucces(response){$scope.bankID=undefined;$('#dlgBank').modal('hide');$scope.ReloadData();},function myError(response){yumiki.message.displayLoadingDialog(false);yumiki.message.clientMessage(response.data,'',yumiki.moneyTrace.bank.errorLogType);});}};$scope.ReloadData=function(){$rootScope.$broadcast("OnReloadData");};});}};}(window,document,jQuery,yumiki));
