
(function(win,doc,$,yumiki){yumiki.moneyTrace={};}(window,document,jQuery,yumiki));

(function(win,doc,$,yumiki){yumiki.moneyTrace.trace={currentDate:'',monthYearFormat:'',longDateFormat:'',traceType:{},errorLog:'',app:{},init:function(serviceUrls,currentDate,monthYearFormat,longDateFormat,traceType,errorLog){yumiki.moneyTrace.trace.currentDate=currentDate;yumiki.moneyTrace.trace.monthYearFormat=monthYearFormat;yumiki.moneyTrace.trace.longDateFormat=longDateFormat;yumiki.moneyTrace.trace.traceType=traceType;yumiki.moneyTrace.trace.errorLog=errorLog;yumiki.moneyTrace.trace.app=angular.module('moneyTrace',['ui.bootstrap','yumiki-module']);yumiki.moneyTrace.trace.initServices(serviceUrls);yumiki.moneyTrace.trace.list.init();},initServices:function(serviceUrls){yumiki.moneyTrace.trace.app.service('DataService',function($http){this.getCurrencyList=function(){return $http.get(serviceUrls.currencyGetAllWithShareableItemsUrl,{params:{'showInactive':false}});};this.getBanks=function(){return $http.get(serviceUrls.bankGetAllWithShareableItemsUrl,{params:{'showInactive':false}});};this.getUsers=function(){return $http.get(serviceUrls.userGetAllUrl,{params:{'showInactive':false}});};this.getTraceList=function(datetime,showInactive,isDisplayedAll,currentPage,itemsPerPage){if(datetime==''){datetime=moment(yumiki.moneyTrace.trace.currentDate).format(yumiki.moneyTrace.trace.monthYearFormat);}
return $http.get(serviceUrls.traceGetAllUrl,{params:{'showInactive':showInactive,'month':datetime,'isDisplayedAll':isDisplayedAll,'currentPage':currentPage,'itemsPerPage':itemsPerPage}});};this.getTotalSummaryTraces=function(){return $http.get(serviceUrls.traceGetTotalSummaryUrl);};this.getBankSummaryTraces=function(){return $http.get(serviceUrls.traceGetBankingSummaryUrl);};this.getTraceByID=function(traceID){return $http.get(serviceUrls.traceGetByIDUrl,{params:{'traceID':traceID}});};this.save=function(trace){return $http.post(serviceUrls.traceSaveUrl,trace);};});},};}(window,document,jQuery,yumiki));

(function(win,doc,$,yumiki){yumiki.moneyTrace.trace.controls={init:function(currentDate,monthYearFormat,getTagUrl){yumiki.moneyTrace.trace.controls.initHighlightedFocusText();yumiki.moneyTrace.trace.controls.initMonthFilter(currentDate,monthYearFormat);yumiki.moneyTrace.trace.controls.initTagAutocomplete(getTagUrl);},initHighlightedFocusText:function(){$("input:text").focus(function(){$(this).select();});},initMonthFilter:function(currentDate,monthYearFormat){$("#txtMonthFilter").val(moment(currentDate).format(monthYearFormat));},initTagAutocomplete:function(getTagUrl){$('.auto-complete').autocomplete({source:function(request,response){$.ajax({type:'GET',url:getTagUrl,contentType:'application/json; charset=utf-8',dataType:'json',data:{keyword:yumiki.jquery.extractLast(request.term)},success:function(data){response(data);}});},search:function(){var term=yumiki.jquery.extractLast(this.value);if(term.length<2){return false;}},focus:function(){return false;},select:function(event,ui){var terms=yumiki.jquery.split(this.value);terms.pop();terms.push(ui.item.value);terms.push("");this.value=terms.join(",");return false;}});},};}(window,document,jQuery,yumiki));

(function(win,doc,$,yumiki){yumiki.moneyTrace.trace.list={showActiveText:'Show Active Traces',showInactiveText:'Show Inactive Traces',init:function(){yumiki.moneyTrace.trace.app.controller('traceController',function($scope,$rootScope,$http,DataService){$scope.inactiveButtonName=yumiki.moneyTrace.trace.list.showInactiveText;$scope.monthFilter=moment(yumiki.moneyTrace.trace.currentDate).format(yumiki.moneyTrace.trace.monthYearFormat);$scope.isDisplayedAll=false;$scope.viewby=20;$scope.itemsPerPage=$scope.viewby;$scope.totalItems=0;$scope.currentPage=1;$scope.maxSize=5;$scope.isStatusChanged=false;$scope.showTraceDialog=function(traceID,transactionType){if(transactionType==yumiki.moneyTrace.trace.traceType.income||transactionType==yumiki.moneyTrace.trace.traceType.outcome){$rootScope.$broadcast("OnNormalTraceLoad",traceID);}
else if(transactionType==yumiki.moneyTrace.trace.traceType.banking){$rootScope.$broadcast("OnBankingTraceLoad",traceID);}
else if(transactionType==yumiki.moneyTrace.trace.traceType.exchange){$rootScope.$broadcast("OnExchangeTraceLoad",traceID);}
else if(transactionType==yumiki.moneyTrace.trace.traceType.transfer){$rootScope.$broadcast("OnTransferTraceLoad",traceID);}};$rootScope.$on('OnReloadData',function(event){$scope.loadData();});$scope.loadData=function(){var showInactive=true;if($scope.inactiveButtonName==yumiki.moneyTrace.trace.list.showInactiveText){showInactive=false;}
if($scope.isStatusChanged){showInactive=!showInactive;}
yumiki.message.displayLoadingDialog(true);DataService.getTotalSummaryTraces().then(function mySucces(response){$scope.traceTotalSummaryList=response.data;},function myError(response){yumiki.message.clientMessage(response.data,'',yumiki.moneyTrace.trace.traceType.errorLog);});DataService.getBankSummaryTraces().then(function mySucces(response){$scope.traceBankingSummaryList=response.data;},function myError(response){yumiki.message.clientMessage(response.data,'',yumiki.moneyTrace.trace.traceType.errorLog);});DataService.getTraceList($scope.monthFilter,showInactive,$scope.isDisplayedAll,$scope.currentPage,$scope.itemsPerPage).then(function mySucces(response){$scope.traceList=response.data.Records;$scope.currentPage=response.data.CurrentPage;$scope.totalItems=response.data.TotalItems;$scope.itemsPerPage=response.data.ItemsPerPage;if($scope.isStatusChanged){if($scope.inactiveButtonName==yumiki.moneyTrace.trace.list.showInactiveText){$scope.inactiveButtonName=yumiki.moneyTrace.trace.list.showActiveText;}else{$scope.inactiveButtonName=yumiki.moneyTrace.trace.list.showInactiveText;}
$scope.isStatusChanged=false;}
yumiki.message.displayLoadingDialog(false);},function myError(response){$scope.isStatusChanged=false;yumiki.message.displayLoadingDialog(false);yumiki.message.clientMessage(response.data,'',yumiki.moneyTrace.trace.traceType.errorLog);});};$scope.isDisplayAllChange=function(){$scope.currentPage=1;$scope.loadData();};$scope.pagingIndexChange=function(){if($scope.totalItems>$scope.viewby){$scope.loadData();}};$scope.loadDataWithStatus=function(){$scope.isStatusChanged=true;$scope.loadData();}});},};}(window,document,jQuery,yumiki));

(function(win,doc,$,yumiki){yumiki.moneyTrace.trace.normal={init:function(defaultObject){yumiki.moneyTrace.trace.app.controller('normalTraceDialogController',function($scope,$rootScope,$http,DataService){$scope.traceID=undefined;$scope.isActiveCheckboxDisabled=false;$rootScope.$on('OnNormalTraceLoad',function(event,traceID){$('#dlgNormalTrace').modal({backdrop:'static'});if(traceID!=undefined&&traceID!=null){$scope.traceID=traceID;$scope.isActiveCheckboxDisabled=false;$scope.dialogTitle="Edit Trace";yumiki.message.displayLoadingDialog(true);DataService.getTraceByID($scope.traceID).then(function mySucces(response){$scope.trace=response.data;$scope.trace.TraceDate=moment($scope.trace.TraceDate).format(yumiki.moneyTrace.trace.longDateFormat);yumiki.message.displayLoadingDialog(false);},function myError(response){yumiki.message.displayLoadingDialog(false);yumiki.message.clientMessage(response.data,'',yumiki.moneyTrace.trace.errorLog);});}else{$scope.dialogTitle="New Trace";$scope.isActiveCheckboxDisabled=true;$scope.trace=$scope.resetTrace();}});$scope.resetTrace=function(){$scope.traceForm.$setPristine();return defaultObject;}
$scope.save=function(isValid){if(isValid){if($scope.trace.Amount>=0){$scope.trace.TransactionType=yumiki.moneyTrace.trace.traceType.income;}
else{$scope.trace.TransactionType=yumiki.moneyTrace.trace.traceType.outcome;}
yumiki.message.displayLoadingDialog(true);DataService.save($scope.trace).then(function mySucces(response){$scope.traceID=undefined;$('#dlgNormalTrace').modal('hide');$scope.ReloadData();},function myError(response){yumiki.message.displayLoadingDialog(false);yumiki.message.clientMessage(response.data,'',yumiki.moneyTrace.trace.errorLog);});}};$scope.ReloadData=function(){$rootScope.$broadcast("OnReloadData");};$scope.bindControls=function(){DataService.getCurrencyList().then(function mySucces(response){$scope.currencyList=response.data;},function myError(response){yumiki.message.clientMessage(response.data,'',yumiki.moneyTrace.trace.errorLog);});}});},};}(window,document,jQuery,yumiki));

(function(win,doc,$,yumiki){yumiki.moneyTrace.trace.banking={init:function(defaultObject){yumiki.moneyTrace.trace.app.controller('bankingTraceDialogController',function($scope,$rootScope,$http,DataService){$scope.traceID=undefined;$scope.isActiveCheckboxDisabled=false;$rootScope.$on('OnBankingTraceLoad',function(event,traceID){$('#dlgBankingTrace').modal({backdrop:'static'});if(traceID!=undefined&&traceID!=null){$scope.traceID=traceID;$scope.isActiveCheckboxDisabled=false;$scope.dialogTitle="Edit Banking Trace";yumiki.message.displayLoadingDialog(true);DataService.getTraceByID($scope.traceID).then(function mySucces(response){$scope.trace=response.data;$scope.trace.TraceDate=moment($scope.trace.TraceDate).format(yumiki.moneyTrace.trace.longDateFormat);yumiki.message.displayLoadingDialog(false);},function myError(response){yumiki.message.displayLoadingDialog(false);yumiki.message.clientMessage(response.data,'',yumiki.moneyTrace.trace.errorLog);});}else{$scope.dialogTitle="New Banking Trace";$scope.isActiveCheckboxDisabled=true;$scope.trace=$scope.resetTrace();}});$scope.resetTrace=function(){$scope.bankingTraceForm.$setPristine();return defaultObject;}
$scope.save=function(isValid){if(isValid){yumiki.message.displayLoadingDialog(true);DataService.save($scope.trace).then(function mySucces(response){$scope.traceID=undefined;$('#dlgBankingTrace').modal('hide');$scope.ReloadData();},function myError(response){yumiki.message.displayLoadingDialog(false);yumiki.message.clientMessage(response.data,'',yumiki.moneyTrace.trace.errorLog);});}};$scope.ReloadData=function(){$rootScope.$broadcast("OnReloadData");};$scope.bindControls=function(){DataService.getCurrencyList().then(function mySucces(response){$scope.currencyList=response.data;},function myError(response){yumiki.message.clientMessage(response.data,'',yumiki.moneyTrace.trace.errorLog);});DataService.getBanks().then(function mySucces(response){$scope.banks=response.data;},function myError(response){yumiki.message.clientMessage(response.data,'',yumiki.moneyTrace.trace.errorLog);});}});},};}(window,document,jQuery,yumiki));

(function(win,doc,$,yumiki){yumiki.moneyTrace.trace.exchange={init:function(defaultObject){yumiki.moneyTrace.trace.app.controller('exchangeTraceDialogController',function($scope,$rootScope,$http,DataService){$scope.traceID=undefined;$scope.isActiveCheckboxDisabled=false;$rootScope.$on('OnExchangeTraceLoad',function(event,traceID){$('#dlgExchangeTrace').modal({backdrop:'static'});if(traceID!=undefined&&traceID!=null){$scope.traceID=traceID;$scope.isActiveCheckboxDisabled=false;$scope.dialogTitle="Edit Exchange Trace";yumiki.message.displayLoadingDialog(true);DataService.getTraceByID($scope.traceID).then(function mySucces(response){$scope.trace=response.data;$scope.trace.TraceDate=moment($scope.trace.TraceDate).format(yumiki.moneyTrace.trace.longDateFormat);yumiki.message.displayLoadingDialog(false);},function myError(response){yumiki.message.displayLoadingDialog(false);yumiki.message.clientMessage(response.data,'',yumiki.moneyTrace.trace.errorLog);});}else{$scope.dialogTitle="New Exchange Trace";$scope.isActiveCheckboxDisabled=true;$scope.trace=$scope.resetTrace();}});$scope.resetTrace=function(){$scope.exchangeTraceForm.$setPristine();return defaultObject;}
$scope.save=function(isValid){if(isValid){yumiki.message.displayLoadingDialog(true);DataService.save($scope.trace).then(function mySucces(response){$scope.traceID=undefined;$('#dlgExchangeTrace').modal('hide');$scope.ReloadData();},function myError(response){yumiki.message.displayLoadingDialog(false);yumiki.message.clientMessage(response.data,'',yumiki.moneyTrace.trace.errorLog);});}};$scope.ReloadData=function(){$rootScope.$broadcast("OnReloadData");};$scope.bindControls=function(){DataService.getCurrencyList().then(function mySucces(response){$scope.currencyList=response.data;},function myError(response){yumiki.message.clientMessage(response.data,'',yumiki.moneyTrace.trace.errorLog);});}});},};}(window,document,jQuery,yumiki));

(function(win,doc,$,yumiki){yumiki.moneyTrace.trace.transfer={init:function(defaultObject){yumiki.moneyTrace.trace.app.controller('transferTraceDialogController',function($scope,$rootScope,$http,DataService){$scope.traceID=undefined;$scope.isActiveCheckboxDisabled=false;$rootScope.$on('OnTransferTraceLoad',function(event,traceID){$('#dlgTransferTrace').modal({backdrop:'static'});if(traceID!=undefined&&traceID!=null){$scope.traceID=traceID;$scope.isActiveCheckboxDisabled=false;$scope.dialogTitle="Edit Transfer Trace";yumiki.message.displayLoadingDialog(true);DataService.getTraceByID($scope.traceID).then(function mySucces(response){$scope.trace=response.data;$scope.trace.TraceDate=moment($scope.trace.TraceDate).format(yumiki.moneyTrace.trace.longDateFormat);yumiki.message.displayLoadingDialog(false);},function myError(response){yumiki.message.displayLoadingDialog(false);yumiki.message.clientMessage(response.data,'',yumiki.moneyTrace.trace.errorLog);});}else{$scope.dialogTitle="New Transfer Trace";$scope.isActiveCheckboxDisabled=true;$scope.trace=$scope.resetTrace();}});$scope.resetTrace=function(){$scope.transferTraceForm.$setPristine();return defaultObject;}
$scope.save=function(isValid){if(isValid){yumiki.message.displayLoadingDialog(true);DataService.save($scope.trace).then(function mySucces(response){$scope.traceID=undefined;$('#dlgTransferTrace').modal('hide');$scope.ReloadData();},function myError(response){yumiki.message.displayLoadingDialog(false);yumiki.message.clientMessage(response.data,'',yumiki.moneyTrace.trace.errorLog);});}};$scope.ReloadData=function(){$rootScope.$broadcast("OnReloadData");};$scope.bindControls=function(){DataService.getCurrencyList().then(function mySucces(response){$scope.currencyList=response.data;},function myError(response){yumiki.message.clientMessage(response.data,'',yumiki.moneyTrace.trace.errorLog);});DataService.getUsers().then(function mySucces(response){$scope.userList=response.data;},function myError(response){yumiki.message.clientMessage(response.data,'',yumiki.moneyTrace.trace.errorLog);});}});},};}(window,document,jQuery,yumiki));
