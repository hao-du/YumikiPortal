@using Yumiki.Web.MoneyTrace.Constants
@using Yumiki.Commons.Dictionaries;
@using Yumiki.Entity.MoneyTrace;
@{
    ViewBag.Title = "Category";
}

@section Script{
    <script type="text/javascript">
        //Declare constant variables.
        var showActiveCategoryString = 'Show Active Categories';
        var showInactiveCategoryString = 'Show Inactive Categories';

        var app = angular.module('moneyTrace', []);

        //Service to transfer data between controllers.
        app.factory('DataTransfer', function () {
            return { categoryID: '' };
        });

        //Service to communicate with Server.
        app.service('DataService', function ($http) {
            this.getTransactionTypeList = function () {
                return $http.get('@Url.HttpRouteUrl(RouteNames.TransactionTypeGetAll, null)', { params: { 'showInactive': false } });
            };

            this.getCategoryList = function (showInactive) {
                return $http.get('@Url.HttpRouteUrl(RouteNames.CategoryGetAll, null)', { params: { 'showInactive': showInactive } });
            };

            this.getCategoryByID = function (categoryID) {
                return $http.get('@Url.HttpRouteUrl(RouteNames.CategoryGetByID, null)', { params: { 'categoryID': categoryID } });
            };

            this.save = function (category) {
                return $http.post('@Url.HttpRouteUrl(RouteNames.CategoryGetSave, null)', category);
            };
        });

        //Controller to display items' list
        app.controller('categoryController', function ($scope, $rootScope, $http, DataService, DataTransfer) {
            $scope.inactiveButtonName = showInactiveCategoryString;

            //To determine when load active or inactive list.
            $scope.isStatusChanged = false;

            //Display Dialog and pass data to Dialog.
            $scope.showDialog = function (categoryID) {
                //Call DialogController
                $rootScope.$broadcast("OnLoad", categoryID);
            }

            //Event for other controllers to reload data.
            $rootScope.$on('OnReloadData', function (event) {
                $scope.loadData();
            });

            //Load active or inactive list.
            $scope.loadData = function () {
                var showInactive = true;
                if ($scope.inactiveButtonName == showInactiveCategoryString) {
                    showInactive = false;
                }

                if ($scope.isStatusChanged) {
                    showInactive = !showInactive;
                }

                $(this).showLoadingBar();
                DataService.getCategoryList(showInactive).then(
                    function mySucces(response) {
                        $scope.categoryList = response.data;

                        if ($scope.isStatusChanged) {
                            if ($scope.inactiveButtonName == showInactiveCategoryString) {
                                $scope.inactiveButtonName = showActiveCategoryString;
                            } else {
                                $scope.inactiveButtonName = showInactiveCategoryString;
                            }
                            $scope.isStatusChanged = false;
                        }
                        $(this).hideLoadingBar();
                    }, function myError(response) {
                        $scope.isStatusChanged = false;
                        $(this).hideLoadingBar();

                        clientMessage(response.data, '', '@Yumiki.Commons.Logging.LogLevel.ERROR');
                    });
            };

            //When click on "ShowInActiveButton", reload data with active status.
            $scope.loadDataWithStatus = function () {
                $scope.isStatusChanged = true;
                $scope.loadData();
            }
        });

        //Controller to display dialog
        app.controller('categoryDialogController', function ($scope, $rootScope, $http, DataService, DataTransfer) {
            $scope.categoryID = undefined;
            $scope.isActiveDisabled = false;

            //Used to be called by other controllers.
            $rootScope.$on('OnLoad', function (event, categoryID) {
                $('#dlgCategory').modal({ backdrop: 'static' });

                if (categoryID != undefined && categoryID != null) {
                    $scope.categoryID = categoryID;
                    $scope.isActiveDisabled = false;
                    $scope.dialogTitle = "Edit Category";

                    $(this).showLoadingBar();

                    DataService.getCategoryByID($scope.categoryID)
                        .then(function mySucces(response) {
                            $scope.category = response.data;
                            $(this).hideLoadingBar();

                        }, function myError(response) {
                            $(this).hideLoadingBar();

                            clientMessage(response.data, '', '@Yumiki.Commons.Logging.LogLevel.ERROR');
                        });

                } else {
                    $scope.dialogTitle = "New Category";
                    $scope.isActiveDisabled = true;

                    $scope.category = $scope.resetCategory();
                }
            });

            //Reset object in new mode.
            $scope.resetCategory = function () {
                $scope.categoryForm.$setPristine();
                return {
                    '@CommonProperties.ID': undefined,
                    '@TB_Category.FieldName.CategoryName': '',
                    '@TB_Category.FieldName.TransactionTypeID': '',
                    '@CommonProperties.IsActive': true
                };
            }

            //Save new or update object
            $scope.save = function (isValid) {
                if (isValid) {
                    $(this).showLoadingBar();
                    DataService.save($scope.category)
                        .then(function mySucces(response) {
                            $scope.categoryID = undefined;
                            $('#dlgCategory').modal('hide');

                            $scope.reloadData();
                        }, function myError(response) {
                            $(this).hideLoadingBar();

                            clientMessage(response.data, '', '@Yumiki.Commons.Logging.LogLevel.ERROR');
                        });
                }
            };

            //After saving, reload list.
            $scope.reloadData = function () {
                $rootScope.$broadcast("OnReloadData");
            };

            // Bind datasource to controls such as Dropdownlist
            $scope.bindControls = function () {
                DataService.getTransactionTypeList().then(
                    function mySucces(response) {
                        $scope.transactionTypes = response.data;
                    }, function myError(response) {
                        clientMessage(response.data, '', '@Yumiki.Commons.Logging.LogLevel.ERROR');
                    });
            }
        });
    </script>
}
<div ng-app="moneyTrace">
    <div class="container" ng-controller="categoryController" ng-init="loadData();">
        <h2>Category</h2>
        <div class="well well-sm">
            <div class="btn-group">
                <button type="button" class="btn btn-primary" ng-click="showDialog();">Add</button>
                <button type="button" class="btn btn-primary" ng-click="loadDataWithStatus();">{{inactiveButtonName}}</button>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="table-responsive">
                    <table id="tblCategory" class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>Category Name</th>
                                <th>Transaction Type</th>
                                <th>Descriptions</th>
                                <th>Active Status</th>
                                <th>Modify Date</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-repeat="category in categoryList">
                                <td>{{ category.@TB_Category.FieldName.CategoryName }}</td>
                                <td>{{ category.@TB_Category.FieldName.TransactionTypeName }}</td>
                                <td>{{ category.@CommonProperties.Descriptions }}</td>
                                <td><input type="checkbox" ng-checked="{{ transactionType.@CommonProperties.IsActive }}" disabled="disabled" /></td>
                                <td>{{ category.@CommonProperties.LastUpdateDateUI }}</td>
                                <td><a href="#" id="btnEdit" ng-click="showDialog(category.@CommonProperties.ID);">Edit</a></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal -->
    <div id="dlgCategory" class="modal fade" role="dialog" ng-controller="categoryDialogController" ng-init="bindControls();">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <form name="categoryForm" ng-submit="save(categoryForm.$valid)" novalidate>
                    <div class="modal-header">
                        <h4 class="modal-title">{{ dialogTitle }}</h4>
                    </div>
                    <div class="modal-body">
                        <div class="form-group" ng-class="{ 'has-error' : categoryForm.categoryName.$invalid }">
                            <label>Category Name</label>
                            <input type="text" name="categoryName" ng-model="category.@TB_Category.FieldName.CategoryName" class="form-control" ng-required="true" />
                            <p ng-show="categoryForm.categoryName.$error.required && categoryForm.categoryName.$dirty" class="help-block">Category Name is required.</p>
                        </div>
                        <div class="form-group" ng-class="{ 'has-error' : categoryForm.transactionType.$invalid }">
                            <label>Transaction Type</label>
                            <select class="form-control selectpicker" name="transactionType" ng-required="true"
                                    ng-model="category.@TB_Category.FieldName.TransactionTypeID"
                                    ng-options="item.@CommonProperties.ID as item.@TB_Category.FieldName.TransactionTypeName for item in transactionTypes">
                                <option value="@CommonValues.EmptyValue">@CommonValues.SelectOneForDropDown</option>
                            </select>
                            <p ng-show="categoryForm.transactionType.$error.required && categoryForm.transactionType.$dirty" class="help-block">Transaction Type is required.</p>
                        </div>
                        <div class="form-group">
                            <label>Descriptions</label>
                            <textarea ng-model="category.@CommonProperties.Descriptions" class="form-control" rows="5"></textarea>
                        </div>
                        <div class="form-group">
                            <span class="checkbox">
                                <input type="checkbox" ng-model="category.@CommonProperties.IsActive" ng-checked="category.@CommonProperties.IsActive" ng-disabled="isActiveDisabled" />
                                <label>Is Active</label>
                            </span>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-default" ng-disabled="categoryForm.$invalid">Save</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

