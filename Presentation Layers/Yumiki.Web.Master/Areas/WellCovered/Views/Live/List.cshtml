@model Yumiki.Entity.WellCovered.MD_Live

@{
    ViewBag.Title = string.Format("{0} List", Model.LiveName);
}
<div class="container">
    <h2>@ViewBag.Title</h2>
    <div class="well well-sm">
        <div class="btn-group">
            @Html.ActionLink("Add", "Create", new { objectID = Model.ObjectID.ToString() }, new { @class = "btn btn-primary" })

            @{
                if (string.IsNullOrWhiteSpace(Request.Params["active"]) || bool.Parse(Request.Params["active"]))
                {
                    @Html.ActionLink("Show Inactive", "List", new { active = false, objectID = Model.ObjectID.ToString() }, new { @class = "btn btn-default" })
                }
                else
                {
                    @Html.ActionLink("Show Active", "List", new { active = true, objectID = Model.ObjectID.ToString() }, new { @class = "btn btn-default" })
                }
            }
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="table-responsive">
                <table class="table table-striped table-bordered">
                    <tr>
                        <th></th>
                        @foreach (string columnName in Model.ColumnNames)
                        {
                            <th>
                                @Html.DisplayName(columnName)
                            </th>
                        }
                    </tr>
                    @if (Model.Datasource != null)
                    {
                        foreach (System.Data.DataRow item in Model.Datasource)
                        {
                            <tr>
                                <td>
                                    @Html.ActionLink("Edit", "Edit", new { id = item[Yumiki.Commons.Dictionaries.CommonProperties.ID].ToString() })
                                </td>
                                @foreach (string columnName in Model.ColumnNames)
                                {
                                    <td>
                                        @{
                                            var value = item[columnName].ToString();
                                        }

                                        @Html.DisplayFor(modelItem => value)
                                    </td>
                                }
                            </tr>
                        }
                    }


                </table>
            </div>
        </div>
    </div>
</div>
