@model IEnumerable<Yumiki.Web.WellCovered.Models.MD_App>

@{
    ViewBag.Title = "Applications";
}
<div class="container">
    <h1>@ViewBag.Title</h1>
    <div class="card bg-secondary">
        <div class="card-body p-2">
            <div class="btn-group">
                @Html.ActionLink("Add", "Create", new { }, new { @class = "btn btn-primary" })

                @{
                    if (string.IsNullOrWhiteSpace(Request.Params[Constants.Active]) || bool.Parse(Request.Params[Constants.Active]))
                    {
                        @Html.ActionLink("Show Inactive", "List", new { active = false }, new { @class = "btn btn-dark" })
                    }
                    else
                    {
                        @Html.ActionLink("Show Active", "List", new { active = true }, new { @class = "btn btn-dark" })
                    }
                }
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="table-responsive-lg">
                <table class="table table-striped table-bordered table-hover">
                    <thead class="thead-dark">
                        <tr>
                            <th></th>
                            <th>
                                @Html.DisplayNameFor(model => model.AppName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Descriptions)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.IsShareable)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.IsActive)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.LastUpdateDateUI)
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.ActionLink(" ", "Edit", new { id = item.ID }, new { @class = "fa fa-edit", title = "Edit" })
                                    @if (string.IsNullOrWhiteSpace(Request.Params[Constants.Active]) || bool.Parse(Request.Params[Constants.Active]))
                                    {
                                        @Html.ActionLink(" ", "List", "Object", new { active = true, appID = item.ID.ToString() }, new { @class = "fa fa-database", target = "_blank", title = "View Objects" })
                                        using (Html.BeginForm("PublishApp", "Live", FormMethod.Post, new { @id = string.Format("form-{0}", item.ID.ToString()), @class = "d-inline" }))
                                        {
                                            @Html.Hidden(Constants.AppID, item.ID.ToString())
                                            <a href="#" onclick="yumiki.wellCovered.onListSubmit('@string.Format("form-{0}", item.ID.ToString()) ');" title="Publish All Objects"><span class="fa fa-cloud-upload"></span></a>
                                        }
                                    }
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.AppName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Descriptions)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.IsShareable)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.IsActive)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.LastUpdateDateUI)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@section BottomScript{
    @Html.Partial("_WellCoveredInclude")
}

