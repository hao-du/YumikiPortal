@model Yumiki.Web.WellCovered.Models.MD_Field

@{
    ViewBag.Title = "Create field";
}
<div class="container">
    <h1>@ViewBag.Title</h1>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.Hidden("action", string.Empty)

        <div class="card bg-secondary">
            <div class="card-body">
                <div class="btn-group">
                    <input type="button" value="Save" class="btn btn-primary" onclick="yumiki.wellCovered.onFormSubmit('@Yumiki.Web.WellCovered.Controllers.FieldController.PostSave')" />
                    @Html.ActionLink("Back", "List", new { active = true, objectID = Model.ObjectID.ToString() }, new { @class = "btn btn-primary" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.FieldName)
                    @Html.EditorFor(model => model.FieldName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FieldName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.DisplayName)
                    @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ApiName)
                    @Html.EditorFor(model => model.ApiName, new { htmlAttributes = new { @class = "form-control" } })
                    <p class="text-info">
                        <i>Api Name is used by system and can only name it during adding new.</i>
                    </p>
                    @Html.ValidationMessageFor(model => model.ApiName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.FieldOrder)
                    @Html.EditorFor(model => model.FieldOrder, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.DataSortByOrder)
                    @Html.EditorFor(model => model.DataSortByOrder, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.EditorFor(model => model.IsDisplayable)
                    @Html.LabelFor(model => model.IsDisplayable)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.EditorFor(model => model.CanIndex)
                    @Html.LabelFor(model => model.CanIndex)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.FieldType)
                    @Html.DropDownListFor(model => model.FieldType
                                                    , (SelectList)ViewBag.DataTypeDatasource
                                                    , Yumiki.Commons.Dictionaries.CommonValues.SelectOneForDropDown
                                                    , new
                                                    {
                                                        @class = "form-control selectpicker"
                                                            ,
                                                        onchange = string.Format("yumiki.wellCovered.onFormSubmit('{0}')", Yumiki.Web.WellCovered.Controllers.FieldController.PostDropdownList)
                                                    })
                    @Html.ValidationMessageFor(model => model.FieldType, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        if (Model.FieldType == Yumiki.Entity.WellCovered.EN_DataType.E_STRING)
        {
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FieldLength)
                        @Html.EditorFor(model => model.FieldLength, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FieldLength, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        }
        if (Model.FieldType == Yumiki.Entity.WellCovered.EN_DataType.E_DATASOURCE)
        {
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Datasource)
                        @Html.EditorFor(model => model.Datasource, new { htmlAttributes = new { @class = "form-control" } })
                        <p class="text-info">
                            <i>1. Simple Datasource: List>>A,B,C,D,E,F</i>
                        </p>
                        <p class="text-info">
                            <i>2. Link DataSource: Link DisplayField=API_Field_Name>>API_Object_Name</i>
                        </p>
                        @Html.ValidationMessageFor(model => model.Datasource, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        }
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.EditorFor(model => model.IsRequired)
                    @Html.LabelFor(model => model.IsRequired)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Descriptions)
                    @Html.TextAreaFor(model => model.Descriptions, new { @class = "form-control", @rows = 5 })
                </div>
            </div>
        </div>
    }
</div>
@section BottomScript{
    @Html.Partial("_WellCoveredInclude")
}
