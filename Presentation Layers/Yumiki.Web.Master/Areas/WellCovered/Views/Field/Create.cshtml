@model Yumiki.Web.WellCovered.Models.MD_Field

@{
    ViewBag.Title = "Create Field";
}
<div class="container">
    <h2>@ViewBag.Title</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.Hidden("action", string.Empty)

        <div class="well well-sm">
            <div class="btn-group">
                <input type="submit" value="Save" class="btn btn-primary" onsubmit="onFormSubmit('@Yumiki.Web.WellCovered.Controllers.FieldController.PostSave')" />
                @Html.ActionLink("Back", "List", new { }, new { @class = "btn btn-primary" })
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6 col-sm-offset-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.FieldName)
                    @Html.EditorFor(model => model.FieldName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FieldName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6 col-sm-offset-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.DisplayName)
                    @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6 col-sm-offset-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.ApiName)
                    @Html.EditorFor(model => model.ApiName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ApiName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6 col-sm-offset-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.FieldType)
                    @Html.DropDownListFor(model => model.FieldType
                                                , (SelectList)ViewBag.DataTypeDatasource
                                                , Yumiki.Commons.Dictionaries.CommonValues.SelectOneForDropDown
                                                , new
                                                {
                                                    @class = "form-control selectpicker"
                                                        ,
                                                    onchange = string.Format("onFormSubmit('{0}')", Yumiki.Web.WellCovered.Controllers.FieldController.PostDropdownList)
                                                })
                    @Html.ValidationMessageFor(model => model.FieldType, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6 col-sm-offset-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.FieldLength)
                    @Html.EditorFor(model => model.FieldLength, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6 col-sm-offset-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.Datasource)
                    @Html.EditorFor(model => model.Datasource, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Datasource, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6 col-sm-offset-3">
                <div class="form-group">
                    <span class="checkbox">
                        @Html.EditorFor(model => model.IsRequired)
                        @Html.LabelFor(model => model.IsRequired)
                    </span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6 col-sm-offset-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.Descriptions)
                    @Html.TextAreaFor(model => model.Descriptions, new { @class = "form-control", @rows = 5 })
                </div>
            </div>
        </div>
    }
</div>

<script type="text/javascript">
    var onFormSubmit = function (action) {
        if (!action) {
            return false;
        }
        //Set value in hidden field 'action' to be URL param
        $('#action').val(action);
        //Submit form after filling all params
        var form = $('#action').closest('form');
        form.submit();
    }
</script>
